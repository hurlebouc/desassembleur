
/home/hubert/Bureau/a.out:     file format elf32-i386


Disassembly of section .init:

080482d8 <_init>:
 80482d8:	55                   	push   %ebp
 80482d9:	89 e5                	mov    %esp,%ebp
 80482db:	53                   	push   %ebx
 80482dc:	83 ec 04             	sub    $0x4,%esp
 80482df:	e8 00 00 00 00       	call   80482e4 <_init+0xc>
 80482e4:	5b                   	pop    %ebx
 80482e5:	81 c3 f8 13 00 00    	add    $0x13f8,%ebx
 80482eb:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 80482f1:	85 d2                	test   %edx,%edx
 80482f3:	74 05                	je     80482fa <_init+0x22>
 80482f5:	e8 36 00 00 00       	call   8048330 <__gmon_start__@plt>
 80482fa:	e8 e1 00 00 00       	call   80483e0 <frame_dummy>
 80482ff:	e8 4c 02 00 00       	call   8048550 <__do_global_ctors_aux>
 8048304:	58                   	pop    %eax
 8048305:	5b                   	pop    %ebx
 8048306:	c9                   	leave  
 8048307:	c3                   	ret    

Disassembly of section .plt:

08048310 <printf@plt-0x10>:
 8048310:	ff 35 e0 96 04 08    	pushl  0x80496e0
 8048316:	ff 25 e4 96 04 08    	jmp    *0x80496e4
 804831c:	00 00                	add    %al,(%eax)
	...

08048320 <printf@plt>:
 8048320:	ff 25 e8 96 04 08    	jmp    *0x80496e8
 8048326:	68 00 00 00 00       	push   $0x0
 804832b:	e9 e0 ff ff ff       	jmp    8048310 <_init+0x38>

08048330 <__gmon_start__@plt>:
 8048330:	ff 25 ec 96 04 08    	jmp    *0x80496ec
 8048336:	68 08 00 00 00       	push   $0x8
 804833b:	e9 d0 ff ff ff       	jmp    8048310 <_init+0x38>

08048340 <__libc_start_main@plt>:
 8048340:	ff 25 f0 96 04 08    	jmp    *0x80496f0
 8048346:	68 10 00 00 00       	push   $0x10
 804834b:	e9 c0 ff ff ff       	jmp    8048310 <_init+0x38>

Disassembly of section .text:

08048350 <_start>:
 8048350:	31 ed                	xor    %ebp,%ebp
 8048352:	5e                   	pop    %esi
 8048353:	89 e1                	mov    %esp,%ecx
 8048355:	83 e4 f0             	and    $0xfffffff0,%esp
 8048358:	50                   	push   %eax
 8048359:	54                   	push   %esp
 804835a:	52                   	push   %edx
 804835b:	68 e0 84 04 08       	push   $0x80484e0
 8048360:	68 f0 84 04 08       	push   $0x80484f0
 8048365:	51                   	push   %ecx
 8048366:	56                   	push   %esi
 8048367:	68 33 84 04 08       	push   $0x8048433
 804836c:	e8 cf ff ff ff       	call   8048340 <__libc_start_main@plt>
 8048371:	f4                   	hlt    
 8048372:	90                   	nop
 8048373:	90                   	nop
 8048374:	90                   	nop
 8048375:	90                   	nop
 8048376:	90                   	nop
 8048377:	90                   	nop
 8048378:	90                   	nop
 8048379:	90                   	nop
 804837a:	90                   	nop
 804837b:	90                   	nop
 804837c:	90                   	nop
 804837d:	90                   	nop
 804837e:	90                   	nop
 804837f:	90                   	nop

08048380 <__do_global_dtors_aux>:
 8048380:	55                   	push   %ebp
 8048381:	89 e5                	mov    %esp,%ebp
 8048383:	53                   	push   %ebx
 8048384:	83 ec 04             	sub    $0x4,%esp
 8048387:	80 3d 0c 97 04 08 00 	cmpb   $0x0,0x804970c
 804838e:	75 3f                	jne    80483cf <__do_global_dtors_aux+0x4f>
 8048390:	a1 10 97 04 08       	mov    0x8049710,%eax
 8048395:	bb 00 96 04 08       	mov    $0x8049600,%ebx
 804839a:	81 eb fc 95 04 08    	sub    $0x80495fc,%ebx
 80483a0:	c1 fb 02             	sar    $0x2,%ebx
 80483a3:	83 eb 01             	sub    $0x1,%ebx
 80483a6:	39 d8                	cmp    %ebx,%eax
 80483a8:	73 1e                	jae    80483c8 <__do_global_dtors_aux+0x48>
 80483aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80483b0:	83 c0 01             	add    $0x1,%eax
 80483b3:	a3 10 97 04 08       	mov    %eax,0x8049710
 80483b8:	ff 14 85 fc 95 04 08 	call   *0x80495fc(,%eax,4)
 80483bf:	a1 10 97 04 08       	mov    0x8049710,%eax
 80483c4:	39 d8                	cmp    %ebx,%eax
 80483c6:	72 e8                	jb     80483b0 <__do_global_dtors_aux+0x30>
 80483c8:	c6 05 0c 97 04 08 01 	movb   $0x1,0x804970c
 80483cf:	83 c4 04             	add    $0x4,%esp
 80483d2:	5b                   	pop    %ebx
 80483d3:	5d                   	pop    %ebp
 80483d4:	c3                   	ret    
 80483d5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483e0 <frame_dummy>:
 80483e0:	55                   	push   %ebp
 80483e1:	89 e5                	mov    %esp,%ebp
 80483e3:	83 ec 18             	sub    $0x18,%esp
 80483e6:	a1 04 96 04 08       	mov    0x8049604,%eax
 80483eb:	85 c0                	test   %eax,%eax
 80483ed:	74 12                	je     8048401 <frame_dummy+0x21>
 80483ef:	b8 00 00 00 00       	mov    $0x0,%eax
 80483f4:	85 c0                	test   %eax,%eax
 80483f6:	74 09                	je     8048401 <frame_dummy+0x21>
 80483f8:	c7 04 24 04 96 04 08 	movl   $0x8049604,(%esp)
 80483ff:	ff d0                	call   *%eax
 8048401:	c9                   	leave  
 8048402:	c3                   	ret    
 8048403:	90                   	nop
 8048404:	90                   	nop
 8048405:	90                   	nop
 8048406:	90                   	nop
 8048407:	90                   	nop
 8048408:	90                   	nop
 8048409:	90                   	nop
 804840a:	90                   	nop
 804840b:	90                   	nop
 804840c:	90                   	nop
 804840d:	90                   	nop
 804840e:	90                   	nop
 804840f:	90                   	nop

08048410 <atoi>:
 8048410:	53                   	push   %ebx
 8048411:	51                   	push   %ecx
 8048412:	89 c3                	mov    %eax,%ebx
 8048414:	b8 00 00 00 00       	mov    $0x0,%eax
 8048419:	b9 00 00 00 00       	mov    $0x0,%ecx

0804841e <atoiloop>:
 804841e:	80 3b 00             	cmpb   $0x0,(%ebx)
 8048421:	74 0d                	je     8048430 <atoidone>
 8048423:	6b c0 0a             	imul   $0xa,%eax,%eax
 8048426:	8a 0b                	mov    (%ebx),%cl
 8048428:	80 e9 30             	sub    $0x30,%cl
 804842b:	01 c8                	add    %ecx,%eax
 804842d:	43                   	inc    %ebx
 804842e:	eb ee                	jmp    804841e <atoiloop>

08048430 <atoidone>:
 8048430:	59                   	pop    %ecx
 8048431:	5b                   	pop    %ebx
 8048432:	c3                   	ret    

08048433 <main>:
 8048433:	55                   	push   %ebp
 8048434:	89 e5                	mov    %esp,%ebp
 8048436:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
 804843a:	0f 85 99 00 00 00    	jne    80484d9 <error_end>
 8048440:	8b 5d 0c             	mov    0xc(%ebp),%ebx
 8048443:	8b 43 04             	mov    0x4(%ebx),%eax
 8048446:	e8 c5 ff ff ff       	call   8048410 <atoi>
 804844b:	a3 00 97 04 08       	mov    %eax,0x8049700
 8048450:	b8 00 00 00 00       	mov    $0x0,%eax
 8048455:	a3 04 97 04 08       	mov    %eax,0x8049704

0804845a <beginwhile0>:
 804845a:	a1 00 97 04 08       	mov    0x8049700,%eax
 804845f:	83 f8 00             	cmp    $0x0,%eax
 8048462:	74 59                	je     80484bd <endwhile0>
 8048464:	a1 00 97 04 08       	mov    0x8049700,%eax
 8048469:	83 e0 01             	and    $0x1,%eax
 804846c:	a3 08 97 04 08       	mov    %eax,0x8049708
 8048471:	a1 08 97 04 08       	mov    0x8049708,%eax
 8048476:	89 c3                	mov    %eax,%ebx
 8048478:	b8 00 00 00 00       	mov    $0x0,%eax
 804847d:	d1 e0                	shl    %eax
 804847f:	39 d8                	cmp    %ebx,%eax
 8048481:	75 0c                	jne    804848f <endif0>
 8048483:	a1 04 97 04 08       	mov    0x8049704,%eax
 8048488:	d1 e0                	shl    %eax
 804848a:	a3 04 97 04 08       	mov    %eax,0x8049704

0804848f <endif0>:
 804848f:	a1 08 97 04 08       	mov    0x8049708,%eax
 8048494:	89 c3                	mov    %eax,%ebx
 8048496:	b8 00 00 00 00       	mov    $0x0,%eax
 804849b:	d1 e0                	shl    %eax
 804849d:	40                   	inc    %eax
 804849e:	39 d8                	cmp    %ebx,%eax
 80484a0:	75 0d                	jne    80484af <endif1>
 80484a2:	a1 04 97 04 08       	mov    0x8049704,%eax
 80484a7:	d1 e0                	shl    %eax
 80484a9:	40                   	inc    %eax
 80484aa:	a3 04 97 04 08       	mov    %eax,0x8049704

080484af <endif1>:
 80484af:	a1 00 97 04 08       	mov    0x8049700,%eax
 80484b4:	d1 e8                	shr    %eax
 80484b6:	a3 00 97 04 08       	mov    %eax,0x8049700
 80484bb:	eb 9d                	jmp    804845a <beginwhile0>

080484bd <endwhile0>:
 80484bd:	a1 04 97 04 08       	mov    0x8049704,%eax

080484c2 <endprog>:
 80484c2:	50                   	push   %eax
 80484c3:	68 fc 96 04 08       	push   $0x80496fc
 80484c8:	e8 53 fe ff ff       	call   8048320 <printf@plt>
 80484cd:	83 c4 08             	add    $0x8,%esp
 80484d0:	89 ec                	mov    %ebp,%esp
 80484d2:	5d                   	pop    %ebp
 80484d3:	b8 00 00 00 00       	mov    $0x0,%eax
 80484d8:	c3                   	ret    

080484d9 <error_end>:
 80484d9:	5d                   	pop    %ebp
 80484da:	b8 01 00 00 00       	mov    $0x1,%eax
 80484df:	c3                   	ret    

080484e0 <__libc_csu_fini>:
 80484e0:	55                   	push   %ebp
 80484e1:	89 e5                	mov    %esp,%ebp
 80484e3:	5d                   	pop    %ebp
 80484e4:	c3                   	ret    
 80484e5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80484e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484f0 <__libc_csu_init>:
 80484f0:	55                   	push   %ebp
 80484f1:	89 e5                	mov    %esp,%ebp
 80484f3:	57                   	push   %edi
 80484f4:	56                   	push   %esi
 80484f5:	53                   	push   %ebx
 80484f6:	e8 4f 00 00 00       	call   804854a <__i686.get_pc_thunk.bx>
 80484fb:	81 c3 e1 11 00 00    	add    $0x11e1,%ebx
 8048501:	83 ec 1c             	sub    $0x1c,%esp
 8048504:	e8 cf fd ff ff       	call   80482d8 <_init>
 8048509:	8d bb 18 ff ff ff    	lea    -0xe8(%ebx),%edi
 804850f:	8d 83 18 ff ff ff    	lea    -0xe8(%ebx),%eax
 8048515:	29 c7                	sub    %eax,%edi
 8048517:	c1 ff 02             	sar    $0x2,%edi
 804851a:	85 ff                	test   %edi,%edi
 804851c:	74 24                	je     8048542 <__libc_csu_init+0x52>
 804851e:	31 f6                	xor    %esi,%esi
 8048520:	8b 45 10             	mov    0x10(%ebp),%eax
 8048523:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048527:	8b 45 0c             	mov    0xc(%ebp),%eax
 804852a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804852e:	8b 45 08             	mov    0x8(%ebp),%eax
 8048531:	89 04 24             	mov    %eax,(%esp)
 8048534:	ff 94 b3 18 ff ff ff 	call   *-0xe8(%ebx,%esi,4)
 804853b:	83 c6 01             	add    $0x1,%esi
 804853e:	39 fe                	cmp    %edi,%esi
 8048540:	72 de                	jb     8048520 <__libc_csu_init+0x30>
 8048542:	83 c4 1c             	add    $0x1c,%esp
 8048545:	5b                   	pop    %ebx
 8048546:	5e                   	pop    %esi
 8048547:	5f                   	pop    %edi
 8048548:	5d                   	pop    %ebp
 8048549:	c3                   	ret    

0804854a <__i686.get_pc_thunk.bx>:
 804854a:	8b 1c 24             	mov    (%esp),%ebx
 804854d:	c3                   	ret    
 804854e:	90                   	nop
 804854f:	90                   	nop

08048550 <__do_global_ctors_aux>:
 8048550:	55                   	push   %ebp
 8048551:	89 e5                	mov    %esp,%ebp
 8048553:	53                   	push   %ebx
 8048554:	83 ec 04             	sub    $0x4,%esp
 8048557:	a1 f4 95 04 08       	mov    0x80495f4,%eax
 804855c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804855f:	74 13                	je     8048574 <__do_global_ctors_aux+0x24>
 8048561:	bb f4 95 04 08       	mov    $0x80495f4,%ebx
 8048566:	66 90                	xchg   %ax,%ax
 8048568:	83 eb 04             	sub    $0x4,%ebx
 804856b:	ff d0                	call   *%eax
 804856d:	8b 03                	mov    (%ebx),%eax
 804856f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048572:	75 f4                	jne    8048568 <__do_global_ctors_aux+0x18>
 8048574:	83 c4 04             	add    $0x4,%esp
 8048577:	5b                   	pop    %ebx
 8048578:	5d                   	pop    %ebp
 8048579:	c3                   	ret    
 804857a:	90                   	nop
 804857b:	90                   	nop

Disassembly of section .fini:

0804857c <_fini>:
 804857c:	55                   	push   %ebp
 804857d:	89 e5                	mov    %esp,%ebp
 804857f:	53                   	push   %ebx
 8048580:	83 ec 04             	sub    $0x4,%esp
 8048583:	e8 00 00 00 00       	call   8048588 <_fini+0xc>
 8048588:	5b                   	pop    %ebx
 8048589:	81 c3 54 11 00 00    	add    $0x1154,%ebx
 804858f:	e8 ec fd ff ff       	call   8048380 <__do_global_dtors_aux>
 8048594:	59                   	pop    %ecx
 8048595:	5b                   	pop    %ebx
 8048596:	c9                   	leave  
 8048597:	c3                   	ret    